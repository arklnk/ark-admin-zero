syntax = "v1"

info(
	title: "用户"
	desc: "用户"
	author: "Trevor"
	email: "trevorlan@163.com"
)

type (
	UserProfession {
		Id   uint64 `json:"id"`
		Name string `json:"name"`
	}
	UserJob {
		Id   uint64 `json:"id"`
		Name string `json:"name"`
	}
	UserDept {
		Id   uint64 `json:"id"`
		Name string `json:"name"`
	}
	UserRole {
		Id   uint64 `json:"id"`
		Name string `json:"name"`
	}
	User {
		Id         uint64         `json:"id"`
		Account    string         `json:"account"`
		Username   string         `json:"username"`
		Nickname   string         `json:"nickname"`
		Gender     uint64         `json:"gender"`
		Email      string         `json:"email"`
		Mobile     string         `json:"mobile"`
		Profession UserProfession `json:"profession"`
		Job        UserJob        `json:"job"`
		Dept       UserDept       `json:"dept"`
		Roles      []UserRole     `json:"roles"`
		Status     uint64         `json:"status"`
		OrderNum   uint64         `json:"orderNum"`
		Remark     string         `json:"remark"`
	}
	SysUserPageReq {
		Page   uint64 `form:"page"    validate:"number,gte=1"`
		Limit  uint64 `form:"limit"   validate:"number,gte=1"`
		DeptId uint64 `form:"deptId"  validate:"number,gte=0"`
	}
	UserPagePagination {
		Page  uint64 `json:"page"`
		Limit uint64 `json:"limit"`
		Total uint64 `json:"total"`
	}
	SysUserPageResp {
		UserList   []User             `json:"list"`
		Pagination UserPagePagination `json:"pagination"`
	}
)

type (
	AddSysUserReq {
		Account      string   `json:"account"       validate:"min=2,max=50"`
		Username     string   `json:"username"      validate:"min=2,max=50"`
		Nickname     string   `json:"nickname"      validate:"omitempty,min=2,max=50"`
		Gender       uint64   `json:"gender"        validate:"number,gte=0,lte=2"`
		Email        string   `json:"email"         validate:"omitempty,email"`
		Mobile       string   `json:"mobile"        validate:"omitempty,min=11"`
		ProfessionId uint64   `json:"professionId"  validate:"number,gte=1"`
		JobId        uint64   `json:"jobId"         validate:"number,gte=1"`
		DeptId       uint64   `json:"deptId"        validate:"number,gte=1"`
		RoleIds      []uint64 `json:"roleIds"       validate:"unique"`
		Status       uint64   `json:"status"        validate:"number,gte=0,lte=1"`
		OrderNum     uint64   `json:"orderNum"      validate:"number,gte=0,lte=9999"`
		Remark       string   `json:"remark"        validate:"max=200"`
	}
)

type (
	DeleteSysUserReq {
		Id uint64 `json:"id"  validate:"number,gte=2"`
	}
)

type (
	UpdateSysUserReq {
		Id           uint64   `json:"id"            validate:"number,gte=2"`
		Username     string   `json:"username"      validate:"min=2,max=50"`
		Nickname     string   `json:"nickname"      validate:"omitempty,min=2,max=50"`
		Gender       uint64   `json:"gender"        validate:"number,gte=0,lte=2"`
		Email        string   `json:"email"         validate:"omitempty,email"`
		Mobile       string   `json:"mobile"        validate:"omitempty,min=11"`
		ProfessionId uint64   `json:"professionId"  validate:"number,gte=1"`
		JobId        uint64   `json:"jobId"         validate:"number,gte=1"`
		DeptId       uint64   `json:"deptId"        validate:"number,gte=1"`
		RoleIds      []uint64 `json:"roleIds"       validate:"unique"`
		Status       uint64   `json:"status"        validate:"number,gte=0,lte=1"`
		OrderNum     uint64   `json:"orderNum"      validate:"number,gte=0,lte=9999"`
		Remark       string   `json:"remark"        validate:"max=200"`
	}
)

type (
	UpdateSysUserPasswordReq {
		Id       uint64 `json:"id"        validate:"number,gte=2"`
		Password string `json:"password"  validate:"min=6,max=12"`
	}
)

type (
	GetSysUserRdpjInfoReq {
		UserId uint64 `form:"userId"  validate:"number,gte=0"`
	}
	Rdpj {
		Id   uint64 `json:"id"`
		Name string `json:"name"`
	}
	DeptTree {
		Id       uint64 `json:"id"`
		ParentId uint64 `json:"parentId"`
		Name     string `json:"name"`
	}
	RoleTree {
		Id       uint64 `json:"id"`
		ParentId uint64 `json:"parentId"`
		Name     string `json:"name"`
	    Has      uint64 `json:"has"`
	}
	GetSysUserRdpjInfoResp {
		Role       []RoleTree `json:"role"`
		Dept       []DeptTree `json:"dept"`
		Profession []Rdpj     `json:"profession"`
		Job        []Rdpj     `json:"job"`
	}
)

@server(
	jwt: JwtAuth
	group : sys/user
	prefix : /sys/user
	middleware: PermMenuAuth
)
service core-api {
	@doc(
		summary: "分页用户"
	)
	@handler GetSysUserPage
	get /page (SysUserPageReq) returns (SysUserPageResp)
	
	@doc(
		summary: "新增用户"
	)
	@handler AddSysUser
	post /add (AddSysUserReq)
	
	@doc(
		summary: "删除用户"
	)
	@handler DeleteSysUser
	post /delete (DeleteSysUserReq)
	
	@doc(
		summary: "更新用户"
	)
	@handler UpdateSysUser
	post /update (UpdateSysUserReq)
	
	@doc(
		summary: "更新用户密码"
	)
	@handler UpdateSysUserPassword
	post /password/update (UpdateSysUserPasswordReq)
	
	@doc(
		summary: "角色部门职称岗位信息"
	)
	@handler GetSysUserRdpjInfo
	get /rdpj/info (GetSysUserRdpjInfoReq) returns (GetSysUserRdpjInfoResp)
}